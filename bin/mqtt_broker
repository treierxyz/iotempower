#!/usr/bin/env bash
if [[ "$*" = "help" || "$*" = "-h" || "$*" = "--help" ]]; then
cat << EOF
Syntax: mqtt_broker [interface1 [interface2]]

mqtt_broker starts a local mosquitto-mqtt-server corresponding to parameters
set in iotempower/etc/iotempower.conf. If interface1 is given it overwrites
the listener address with this interface. If interface2 is also provided, 
the broker will listen on both interfaces. If the option scanif is given 
for interface1, it will try to guess the interface itself.
EOF
exit 1
fi

[ "$IOTEMPOWER_ACTIVE" = "yes" ] || { echo "IoTempower not active, aborting." 1>&2; exit 1; }
source <(iot_env ignore_system)

APTEMP="$IOTEMPOWER_LOCAL/tmp/mosquitto"
rm -rf "$APTEMP" &> /dev/null
mkdir -p "$APTEMP"

while true; do
    IF1="$1"
    IF2="$2"

    if [[ "$IF1" ]]; then
        if [[ "$IF1" = "scanif" ]]; then
            IF1=$(find_local_network|cut -d\  -f1)
            echo "Preferred interface: $IF1"
        fi
        export IOTEMPOWER_MQTT_HOST=$(ip a show "$IF1" | grep " inet " | head -n1 | cut -d\  -f6 | cut -d/ -f1)
    fi

    if [[ "$IF2" ]]; then
        export IOTEMPOWER_MQTT_HOST2=$(ip a show "$IF2" | grep " inet " | head -n1 | cut -d\  -f6 | cut -d/ -f1)
    fi

    echo "Listening on $IOTEMPOWER_MQTT_HOST."
    [[ "$IOTEMPOWER_MQTT_HOST2" ]] && echo "Also listening on $IOTEMPOWER_MQTT_HOST2."

    # Create mosquitto config - user is needed for root on docker
    cat << EOF > "$APTEMP/mosquitto.conf"
pid_file $APTEMP/pid
user $USER
persistence false
persistence_location $APTEMP/mosquitto.db
log_dest stdout
log_type error
log_type warning
listener 1883 127.0.0.1
listener 1883 $IOTEMPOWER_MQTT_HOST
allow_anonymous true
EOF

    if [[ "$IOTEMPOWER_MQTT_HOST2" ]]; then
        cat << EOF >> "$APTEMP/mosquitto.conf"
listener 1883 $IOTEMPOWER_MQTT_HOST2
EOF
    fi

    # Create bridge if needed
    if [[ "$IOTEMPOWER_MQTT_BRIDGE_HOST" ]]; then
        cat << EOF >> "$APTEMP/mosquitto.conf"
connection bridge-to-$IOTEMPOWER_MQTT_BRIDGE_HOST
bridge_capath $IOTEMPOWER_MQTT_BRIDGE_CERTPATH
bridge_insecure false
address $IOTEMPOWER_MQTT_BRIDGE_HOST:$IOTEMPOWER_MQTT_BRIDGE_PORT
cleansession false
clientid bridge-$HOSTNAME-$IOTEMPOWER_MQTT_BRIDGE_HOST
start_type automatic
username $IOTEMPOWER_MQTT_BRIDGE_USER
password $IOTEMPOWER_MQTT_BRIDGE_PW
notifications false
try_private true
topic # both 2 ${IOTEMPOWER_MQTT_BRIDGE_TOPIC}/ ${IOTEMPOWER_MQTT_BRIDGE_TOPIC}/
EOF
    fi

    echo "Stopping all existing services."
    pkill mosquitto
    sleep 1
    echo "Starting mosquitto."
    mosquitto -v -c "$APTEMP/mosquitto.conf"
done
